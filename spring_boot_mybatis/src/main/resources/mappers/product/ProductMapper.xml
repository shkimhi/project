<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
   <mapper namespace="com.spring_boot_mybatis.project.dao.IProductDAO">
  	<resultMap id="prdResult" type="com.spring_boot_mybatis.project.model.ProductVO" >
  		<result property="prdNo"  column="prdNo"  />
  		<result property="prdName"  column="prdName"  />
  		<result property="prdPrice"  column="prdPrice"  />
  		<result property="prdCompany"  column="prdCompany"  />
  		<result property="prdDate"  column="prdDate"  />
  		<result property="prdStock"  column="prdStock"  />
  	</resultMap>
  
  <!-- 전체 상품 조회 -->
 <select id="listAllProduct" resultMap="prdResult">
  		SELECT * FROM product ORDER BY prdNo
  </select>

 <!--가격이 500000 이상인 상품만 선택-->
<!--   <select id="listAllProduct" resultMap="prdResult">
  <![CDATA[
        SELECT * FROM product WHERE prdPrice>=500000
        ]]>
  </select>  -->
  <!-- 상품 등록 -->
<insert id="insertProduct" parameterType="com.spring_boot_mybatis.project.model.ProductVO">
  		INSERT INTO product (prdNo, prdName, prdPrice, prdCompany, prdStock, prdDate)
  		VALUES (#{prdNo}, #{prdName}, #{prdPrice}, #{prdCompany}, #{prdStock}, #{prdDate})
  </insert>
  <!--상품 상세 조회 : 상품 번호(prdNo) 전달 받아서 상품 정보 반환-->
  <select id="detailViewProduct" parameterType="string"
  							  	 resultType="com.spring_boot_mybatis.project.model.ProductVO">
  	SELECT * FROM product WHERE prdNo = #{prdNo}					  	 
  </select>
  
  <!--상품 정보 수정 : 기본키인 상품 번호는 수정하지 않음.-->
  <update id="updateProduct" parameterType="com.spring_boot_mybatis.project.model.ProductVO">
  	UPDATE product
  	SET prdName= #{prdName}, prdPrice= #{prdPrice}, prdCompany= #{prdCompany}, prdStock= #{prdStock}, prdDate= #{prdDate}
  	WHERE prdNo= #{prdNo}
  </update>
  
  <!--상품 정보 삭제 : 삭제할 상품번호 전달 받음-->
  <delete id="deleteProduct" parameterType="string">
  DELETE FROM product WHERE prdNo=#{prdNo}
  </delete>
  
  <!--중복 검사-->
  	<select id="prdNoCheck" parameterType="String"  resultType="string">
	SELECT prdNo FROM product where prdNo = #{prdNo}
	</select>
    <!-- 상품 검색  -->
  <select id="productSearch" parameterType="hashmap" resultMap="prdResult">
  		SELECT * FROM product WHERE
  		<choose>
  			<when test="type != null and type.equals('prdName')">
  				prdName Like CONCAT('%', #{keyword}, '%')
  			</when>
  			<when test="type != null and type.equals('prdCompany')">
  				prdCompany Like CONCAT('%', #{keyword}, '%')
  			</when>
  		</choose>
  </select>
  
  </mapper>
